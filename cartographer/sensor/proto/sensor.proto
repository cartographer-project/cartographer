// Copyright 2016 The Cartographer Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package cartographer.sensor.proto;

option java_outer_classname = "Sensor";

import "cartographer/transform/proto/transform.proto";

// Compressed collection of a 3D point cloud.
message CompressedPointCloud {
  optional int32 num_points = 1;
  repeated int32 point_data = 3 [packed = true];
}

// Proto representation of ::cartographer::sensor::ImuData.
message ImuData {
  optional int64 timestamp = 1;
  optional transform.proto.Vector3d linear_acceleration = 2;
  optional transform.proto.Vector3d angular_velocity = 3;
}

// Proto representation of ::cartographer::sensor::CompressedRangeData.
message CompressedRangeData {
  optional transform.proto.Vector3f origin = 1;
  optional CompressedPointCloud returns = 2;
  optional CompressedPointCloud misses = 3;
}

// Proto representation of ::cartographer::sensor::OdometryData.
message OdometryData {
  optional int64 timestamp = 1;
  optional transform.proto.Rigid3d pose = 2;
}
